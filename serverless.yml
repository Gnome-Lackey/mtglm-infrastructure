service: mtglm-infrastructure

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  memorySize: 128

custom:
  allowedOrigin: "http://${self:provider.stage}-mtglm-web.s3-website-${self:provider.region}.amazonaws.com"
  codeBuildNamePrefix: "${self:provider.stage}-mtglm-codebuild"
  env: ${self:provider.stage}

resources:
  Resources:
    RoleGodMode: ${file(common/iam.yml)}
    CodeBuildWeb: ${file(codebuild/web.yml)}
    CodeBuildServiceAuth: ${file(codebuild/service-auth.yml)}
    CodeBuildServiceMatch: ${file(codebuild/service-match.yml)}
    CodeBuildServicePlayer: ${file(codebuild/service-player.yml)}
    CodeBuildServiceScryfall: ${file(codebuild/service-scryfall.yml)}
    CodeBuildServiceSeason: ${file(codebuild/service-season.yml)}
    MatchesTable: ${file(dynamoDB/matches.yml)}
    PlayersTable: ${file(dynamoDB/players.yml)}
    PlayerSeasonMetadataTable: ${file(dynamoDB/player-season-metadata.yml)}
    RecordsTable: ${file(dynamoDB/records.yml)}
    SeasonsTable: ${file(dynamoDB/seasons.yml)}
  Outputs:
    matchTableArn: ${file(outputs/MatchesTableArn.yml)}
    matchTableName: ${file(outputs/MatchesTableName.yml)}
    playerTableArn: ${file(outputs/PlayerTableArn.yml)}
    playerTableName: ${file(outputs/PlayerTableName.yml)}
    playerSeasonMetadataTableArn: ${file(outputs/PlayerSeasonMetadataTableArn.yml)}
    playerSeasonMetadataTableName: ${file(outputs/PlayerSeasonMetadataTableName.yml)}
    recordTableArn: ${file(outputs/RecordsTableArn.yml)}
    recordTableName: ${file(outputs/RecordsTableName.yml)}
    seasonTableArn: ${file(outputs/SeasonTableArn.yml)}
    seasonTableName: ${file(outputs/SeasonTableName.yml)}
